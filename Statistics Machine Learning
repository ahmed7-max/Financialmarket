import numpy as np
from scipy import stats
data = np.array([4,5,1,2,7,2,6,9,3])
## Calculate Mean

dt_mean = np.mean(data) ; print("Mean : ", round(dt_mean,2))
dt_median = np.median(data) ; print("Median : ", dt_median)
dt_mode = stats.mode(data) ; print("Mode : ", dt_mode[0][0])

from statistics import variance, stdev
game_points = np.array([35,46,56,43,54,23,67,66,84,54,77,82,24])
## Calculate Variance
dt_var = variance(game_points) ; print("Sample variance: ", round(dt_var,2))
dt_std = stdev(game_points) ; print("Sample std.dev:", round(dt_std,2))
dt_range = np.max(game_points, axis=0) - np.min(game_points, axis=0) ; print("Range :", dt_range)
print("Quantiles:")
for val in [20, 80, 100]: 
  dt_quantiles = np.percentile(game_points, val)
  print(str(val)+"%", dt_quantiles)
  q75, q25 = np.percentile(game_points, [75, 25]); print("Inter quartile range :", q75-q25)
from scipy import stats
xbar = 990; mu0= 1000; s = 12.5; n = 30
#Test statistics 
t_sample = (xbar-mu0)/(s/np.sqrt(float(n))) ; print("test Statistics: ", round(t_sample,2))
#Critical value from t-table
alpha = 0.05
t_alpha = stats.t.ppf(alpha, n-1); print("Critical value from t-table:", round(t_alpha,3))
p_value = stats.t.sf(np.abs(t_sample), n-1) ; print("Lower tail p-value from t-table", p_value)
